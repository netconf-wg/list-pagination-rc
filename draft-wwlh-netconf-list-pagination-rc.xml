<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->

<rfc xmlns:xi="http://www.w3.org/2001/XInclude"
     docName="draft-wwlh-netconf-list-pagination-rc-latest"
     category="std"
     consensus="true"
     ipr="trust200902"
     updates="8040">

  <front>
    <title abbrev="RESTCONF Pagination Support">
        RESTCONF Extensions to Support List Pagination
    </title>

    <author fullname="Kent Watsen" initials="K." surname="Watsen">
      <organization>Watsen Networks</organization>
      <address>
        <email>kent+ietf@watsen.net</email>
      </address>
    </author>
    <author fullname="Qin Wu" initials="Q." surname="Wu">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>
          <city>Nanjing</city>
          <region>Jiangsu</region>
          <code>210012</code>
          <country>China</country>
        </postal>
        <email>bill.wu@huawei.com</email>
      </address>
    </author>
    <author fullname="Olof Hagsand" initials="O." surname="Hagsand">
      <organization>Netgate</organization>
      <address>
        <email>olof@hagsand.se</email>
      </address>
    </author>
    <author fullname="Hongwei Li" initials="H." surname="Li">
      <organization>Hewlett Packard Enterprise</organization>
      <address>
        <email>flycoolman@gmail.com</email>
      </address>
    </author>

    <date/>
    <area>OPS Area</area>
    <workgroup>NETCONF Working Group</workgroup>

    <abstract>
      <t>This document defines a mapping of the list pagination mechanism
        defined in <xref target="I-D.wwlh-netconf-list-pagination-nc"/>
        RESTCONF <xref target="RFC8040"/>.</t>
      <t>This document updates RFC 8040, to declare "list" and "leaf-list" as
        valid resource targets for the RESTCONF GET and DELETE
        operations, to define GET query parameters necessary
        for list pagination, and to define a media-type for
        XML-based lists.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro" title="Introduction">

      <t>This document defines a mapping of the list pagination mechanism
        defined in <xref target="I-D.wwlh-netconf-list-pagination"/>
        RESTCONF <xref target="RFC8040"/>.</t>

      <t>This document updates RFC 8040, as described in <xref target="updates"/>.</t>

      <t>Declaring "list" and "leaf-list" as valid resource targets
        for the GET operation is necessary for list pagination.  Declaring
        these nodes as valid resource targets for the DELETE operation is
        merely to complete the solution for RESTCONF.</t>

      <section title="Terminology">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
          "MAY", and "OPTIONAL" in this document are to be interpreted as
          described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
          when, and only when, they appear in all capitals, as shown here.</t>
      </section>

      <!--
      <section title="Conventions">
        <t>Various examples used in this document use a placeholder
          value for binary data that has been base64 encoded (e.g.,
          "BASE64VALUE=â€œ).  This placeholder value is used as real
          base64 encoded structures are often many lines long and
          hence distracting to the example being presented.</t>
        </section>
      -->
    </section> <!-- intro -->

    <section title="Updates to RFC8040" anchor="updates">

      <section title="Resource Targets">
        <t>This document extends <relref section="3.5" target="RFC8040" relative="#FIXME"/>
          to add "list" and "leaf-list" nodes (not just their entries)
          as valid data resources for the "GET" and "DELETE" operations.</t>
      </section>

      <section title="Media Type">
        <t>This document extends <relref section="3.2" target="RFC8040" relative="#FIXME"/>
          to add a new media type, "application/yang-data+xml-list", to
          encode "list" and "leaf-list" nodes in XML.</t>
        <t>The "application/yang-data+xml-list" media-type defines a
          pseudo top-level element called "xml-list" that is used to
          wrap the response set, thus ensuring that a single top-level
          element is returned for the XML encoding", as required by <relref 
          section="4.3" target="RFC8040" relative="#FIXME"/>.</t>
        <t>For JSON, the existing "application/yang-data+json" media type is
          sufficient, as the JSON format has built-in support for encoding
          arrays.</t>
        <t>The "application/yang-data+xml-list" media type is registrered
          in <xref target="media-type"/>.</t>
      </section>

      <section title="Query Parameters">
        <t>Ths document extends <relref section="4.8" target="RFC8040" relative="#FIXME"/>
          to add new query parameters "limit", "offset", "direction",
          "sort", "where", and "sublist-list".</t>
        <t>These six query parameters coorespond to those defined in
          Sections 3.1 and 3.2 in <xref target="I-D.wwlh-netconf-list-pagination"/>.</t>
        <t>
          <figure>
            <artwork><![CDATA[
+-----------+---------+-----------------------------------------+
| Name      | Methods | Description                             |
+-----------+---------+-----------------------------------------+
| limit     | GET,    | Limits the number of entries returned.  |
|           | HEAD    | If not specified, the number of entries |
|           |         | that may be returned is unbounded.      |
|           |         |                                         |
| offset    | GET,    | Indicates the number of entries in the  |
|           | HEAD    | result set that should the skipped over |
|           |         | when preparing the response.  If not    |
|           |         | specified, then no entries in the       |
|           |         | result set are skipped.                 |
|           |         |                                         |
| direction | GET,    | Indicates the direction that the result |
|           | HEAD    | set is to be traversed.  If not         |
|           |         | specified, then the result set is       |
|           |         | traversed in the "forwards" direction.  |
|           |         |                                         |
| sort      | GET,    | Indicates the node name that the result |
|           | HEAD    | set should be sorted by.  If not        |
|           |         | specified, then the result set's        |
|           |         | default order is used, per YANG's       |
|           |         | "ordered-by" statement.                 |
|           |         |                                         |
| where     | GET,    | Specifies a filter expression that      |
|           | HEAD    | result set entries must match.  If      |
|           |         | not specified, then no entries are      |
|           |         | filtered from the result set.           |
|           |         |                                         |
| sublist-  | GET,    | Limits te number of entries returned    |
|  limit    | HEAD    | returned for descendent lists and       |
|           |         | leaf-lists. If not specified, the       |
|           |         | number of entries that may be returned  |
|           |         | is unbounded.                           |
+-----------+---------+-----------------------------------------+
]]></artwork>
          </figure>
        </t>
        <t>For all of the query parameters, the query parameter is only
          allowed for the GET and HEAD methods on "list" and "leaf-list"
          data resources. A "400 Bad Request" status-line MUST be returned
          if used with any other method or resource type. The error-tag
          value "operation-not-supported" is used in this case.</t>
        <t>Per the conformance defined in <relref section="3.1"
          target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>,
          all of these parameters MUST be supported for all lists and
          leaf-lists, but servers MAY disable the support for some or all
          "config false" lists, as described in <relref section="3.3" target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>


        <section title='The "limit" Query Parameter'>
          <t>The "limit" query parameter corresponds to the "limit"
            parameter defined in <relref section="3.1.5"
            target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>
          <t>No additional RESTCONF-specific conderations are defined
            for this query parameter.</t>
        </section>

        <section title='The "offset" Query Parameter'>
          <t>The "offset" query parameter corresponds to the "offset"
            parameter defined in <relref section="3.1.4"
            target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>
          <t>If the offset value exceeds the number of entries in the working result
            set, then a "416 Range Not Satisfiable" status-line MUST be returned with
            the error-tag value "invalid-value".</t>
        </section>

        <section title='The "direction" Query Parameter'>
          <t>The "direction" query parameter corresponds to the "direction"
            parameter defined in <relref section="3.1.3"
            target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>
          <t>No additional RESTCONF-specific conderations are defined
            for this query parameter.</t>
        </section>

        <section title='The "sort" Query Parameter'>
          <t>The "sort" query parameter corresponds to the "sort"
            parameter defined in <relref section="3.1.2"
            target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>
          <t>If the specified node identifier is invalid, then a
            "400 Bad Request" status-line MUST be returned with
            the error-tag value "invalid-value".</t>
        </section>

        <section title='The "where" Query Parameter'>
          <t>The "where" query parameter corresponds to the "where"
            parameter defined in <relref section="3.1.1"
            target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>
          <t>If the specified XPath expression is invalid, then
            a "400 Bad Request" status-line MUST be returned with
            the error-tag value "invalid-value".</t>
        </section>
      </section>
    </section> <!-- Updates to RFC 8040 -->


    <section title="IANA Considerations">

      <section title='The "RESTCONF Capability URNs" Registry'>
        <t>This document registers six capabilities in the RESTCONF
          Capability URNs <xref target="RFC8040"/> maintained at
          <eref target="https://www.iana.org/assignments/restconf-capability-urns/restconf-capability-urns.xhtml"/>.
          Following the instructions defined in <relref section="11.4" target="RFC8040" relative="#FIXME"/>,
          the below registrations are requested:</t>

        <t>All the registrations are to use this document (RFC XXXX)
          for the "Reference" value.</t>
        <t>
          <figure>
            <artwork><![CDATA[
Index           Capability Identifier
---------------------------------------------------------------------
:limit          urn:ietf:params:restconf:capability:limit:1.0
:offset         urn:ietf:params:restconf:capability:offset:1.0
:direction      urn:ietf:params:restconf:capability:direction:1.0
:sort           urn:ietf:params:restconf:capability:sort:1.0
:where          urn:ietf:params:restconf:capability:where:1.0
:sublist-limit  urn:ietf:params:restconf:capability:sublist-limit:1.0
]]></artwork>
          </figure>
        </t>
      </section>

      <section title='The "Media Types" Registry'>
        <t>This document registers one media type in the "application"
          subregistry of the Media Types registry <xref target="RFC6838"/>
          <xref target="RFC4855"/> maintained at <eref target="https://www.iana.org/assignments/media-types/media-types.xhtml#application"/>.
            Following the format defined in <xref target="RFC4855"/>, the below
            registration is requested:</t>
        <section title='Media Type "application/yang-data+xml-list"' anchor="media-type">
          <figure>
            <artwork>Type name: application

   Subtype name: yang-data+xml-list

   Required parameters: None

   Optional parameters: None

   Encoding considerations: 8-bit
      Each conceptual YANG data node is encoded according to the
      XML Encoding Rules and Canonical Format for the specific
      YANG data node type defined in [RFC7950]. 

   Security considerations: Security considerations related
      to the generation and consumption of RESTCONF messages
      are discussed in Section 12 of RFC 8040.  Additional
      security considerations are specific to the semantics
      of particular YANG data models.  Each YANG module is
      expected to specify security considerations for the
      YANG data defined in that module.

   Interoperability considerations: RFC XXXX specifies the
      format of conforming messages and the interpretation
      thereof.

   Published specification: RFC XXXX

   Applications that use this media type: Instance document data
      parsers used within a protocol or automation tool that
      utilize the YANG Patch data structure.

   Fragment identifier considerations: Fragment identifiers for
      this type are not defined.  All YANG data nodes are
      accessible as resources using the path in the request URI.

   Additional information:

      Deprecated alias names for this type: N/A
      Magic number(s): N/A
      File extension(s): None
      Macintosh file type code(s): "TEXT"

   Person &amp; email address to contact for further information:
      See the Authors' Addresses section of RFC XXXX.

   Intended usage: COMMON

   Restrictions on usage: N/A

   Author: See the Authors' Addresses section of RFC XXXX.

   Change controller: Internet Engineering Task Force
      (mailto:iesg@ietf.org).

   Provisional registration? (standards tree only): no
</artwork>
          </figure>
        </section>
      </section>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>This document introduces not protocol operations for paging
        through data already provided by the RESTCONF protocol, and
        hence does not introduce any new security considerations.</t>
      <t>This document does not define a YANG module and hence there
        are no data modeling considerations beyond those discussed in
        <xref target="I-D.wwlh-netconf-list-pagination"/>.</t>
    </section>
  </middle>
  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      <!--<?rfc include="reference.RFC.3688.xml"?>
      <?rfc include="reference.RFC.6020.xml"?>
      <?rfc include="reference.RFC.6241.xml"?>
      <?rfc include="reference.RFC.6242.xml"?>
      <?rfc include="reference.RFC.7950.xml"?>-->
      <?rfc include="reference.RFC.8040.xml"?>
      <?rfc include="reference.RFC.8174.xml"?>
      <!--<?rfc include="reference.RFC.8342.xml"?>-->
    </references>
    <references title="Informative References">
      <!-- START PLACEHOLDER UNTIL THE LP draft is submitted
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.wwlh-netconf-list-pagination.xml"/>
      -->
      <reference anchor="I-D.wwlh-netconf-list-pagination" target="FIXME">
        <front>
          <title>List Pagination...</title>
          <author/>
        </front>
      </reference>
      <!-- END PLACEHOLDER UNTIL THE LP draft is submitted -->

      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.wwlh-netconf-list-pagination-nc.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-restconf-collection.xml"/>
      <?rfc include="reference.RFC.4855.xml"?>
      <?rfc include="reference.RFC.6838.xml"?>
      <!--<?rfc include="reference.RFC.8341.xml"?>
      <?rfc include="reference.RFC.8446.xml"?>-->
      <!-- <?rfc include="reference.RFC.8340.xml"?> Tree Diagrams -->
      <!--<?rfc include="reference.RFC.6991.xml"?> YANG Types-->
    </references>
    <section title="Example YANG Module">
      <t>The examples within this document use the "example-social" YANG
        module defined in <relref section="A.1" target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>
    </section>
    <section title="Example Data Set">
      <t>The Example Data Set within this document uses one defined in <relref section="A.2" target="I-D.wwlh-netconf-list-pagination" relative="#FIXME"/>.</t>
    </section>
    <section title="Example Queries">
      <section title="No Query Parameters">
        <t>Client requests all list entries.  This example
          is also used to illustrate the difference between
          XML and JSON based encodings.</t>
        <section title="XML Encoding">
          <t>Request:</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(includes/ex-api-none-rpc.xml)
]]></artwork>
            </figure>
          </t>
          <t>Response:</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(includes/ex-api-none-rpc-reply.xml)
]]></artwork>
            </figure>
          </t>
        </section>
        <section title="JSON Encoding">
          <t>Request:</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(includes/ex-api-none-rpc.json)
]]></artwork>
            </figure>
          </t>
          <t>Response:</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(includes/ex-api-none-rpc-reply.json)
]]></artwork>
            </figure>
          </t>
        </section>
      </section>
      <section title='Combination of "where", "sort", "offset", and "limit"'>
        <t>In this example, the client requests the first 2 "post" resources
        from the selected skill resources list,starting from one, order by timestamp:
          <figure><artwork><![CDATA[
INSERT_TEXT_FROM_FILE(includes/ex-api-where-sort-skip-count-rpc.xml)
]]></artwork></figure>
      </t>
        <t>Response from the RESTCONF server:
          <figure><artwork><![CDATA[
INSERT_TEXT_FROM_FILE(includes/ex-api-where-sort-skip-count-rpc-reply.xml)
]]></artwork></figure>
      </t>
      </section>
    </section>
    <!-- Example Queries -->
    <!--
    <section title="Contributors" numbered="no">
      <figure>
        <artwork>Per Andersson
perander@cisco.com

David Cornejo
dcornejo@gmail.com</artwork>
      </figure>
    </section>
    -->
    <section title="Acknowledgements" numbered="no">
      <t>This work has benefited from the discussions of restconf resource
      collection over the years, in particular,
      <xref target="I-D.ietf-netconf-restconf-collection"/>. The
      authors additionaly thank the following for lively discussions on
      list (ordered by first name):
        Andy Bierman,
        Martin Bj&ouml;rklund,
        and Robert Varga
      </t>
    </section>
  </back>
</rfc>
